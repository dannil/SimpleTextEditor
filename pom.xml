<project xmlns="http://maven.apache.org/POM/4.0.0" 
		 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>SimpleTextEditor</groupId>
	<artifactId>SimpleTextEditor</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	
	<properties>
	    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

		<swt.version>4.4</swt.version>
		<guava.version>18.0</guava.version>
		<slf4j.version>1.7.9</slf4j.version>
		<jdk.version>1.7</jdk.version>
		
		<main.class>com.github.jendap.multiplatformswt.loader.MultiPlatformSwtHelper</main.class>
		<rsrc.main.class>org.dannil.simpletexteditor.MainView</rsrc.main.class>
	</properties>
	
	<dependencies>
		<dependency>
			<groupId>com.github.jendap</groupId>
			<artifactId>multiplatform-swt-loader</artifactId>
			<version>4.4</version>
			<classifier>multiplatform</classifier>
		</dependency>

		<dependency>
			<groupId>org.eclipse.swt</groupId>
			<artifactId>${swt.artifactId}</artifactId>
			<version>${swt.version}</version>
			<scope>provided</scope>
		</dependency>
		
		<dependency>
		    <groupId>org.slf4j</groupId>
		    <artifactId>slf4j-simple</artifactId>
		    <version>${slf4j.version}</version>
		</dependency>
		
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>${guava.version}</version>
		</dependency>
		
	</dependencies>

	<build>
		<defaultGoal>package</defaultGoal>

		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<archive>
						<!-- We put the main class and class path into manifest. This -->
						<!-- enable you to run the app using double-click on your jar file -->
						<!-- or using java -jar your_jar_file_name.jar from command line. -->
						<!-- Set the mainClass to MultiPlatformSwtHelper and add your -->
						<!-- main class as Rsrc-Main-Class in manifestEntries. -->
						<!-- Optionaly set the mainClass and Rsrc-Main-Class in archive -->
						<!-- section of the jar plugin if you're not useing assembly plugin. -->
						<manifest>
							<addClasspath>true</addClasspath>
							<mainClass>${main.class}</mainClass>
						</manifest>
						<manifestEntries>
							<Rsrc-Main-Class>${rsrc.main.class}</Rsrc-Main-Class>
						</manifestEntries>
					</archive>
					<descriptorRefs>
						<descriptorRef>jar-with-dependencies</descriptorRef>
					</descriptorRefs>
				</configuration>
				<executions>
					<execution>
						<id>make-assembly</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.2</version>
				<configuration>
					<source>${jdk.version}</source>
					<target>${jdk.version}</target>
				</configuration>
      		</plugin>
		</plugins>
	</build>

	<!-- The profiles are used to select correct swt artifact at compile -->
	<!-- (and development) time. We will have all of them at the runtime. -->
	<!-- That's the goal of this project ;-) You can manually force -->
	<!-- different profile by maven's command line argument -P -->
	<profiles>
		<profile>
			<id>linux32</id>
			<activation>
				<os>
					<family>linux</family>
					<arch>i386</arch>
				</os>
			</activation>
			<properties>
				<swt.artifactId>org.eclipse.swt.gtk.linux.x86</swt.artifactId>
			</properties>
		</profile>
		<profile>
			<id>linux64</id>
			<activation>
				<os>
					<family>linux</family>
					<arch>amd64</arch>
				</os>
			</activation>
			<properties>
				<swt.artifactId>org.eclipse.swt.gtk.linux.x86_64</swt.artifactId>
			</properties>
		</profile>
		<profile>
			<id>macosx32</id>
			<activation>
				<os>
					<family>macosx</family>
					<arch>i386</arch>
				</os>
			</activation>
			<properties>
				<swt.artifactId>org.eclipse.swt.cocoa.macosx</swt.artifactId>
			</properties>
		</profile>
		<profile>
			<id>macosx64</id>
			<activation>
				<os>
					<family>macosx</family>
					<arch>x86_64</arch>
				</os>
			</activation>
			<properties>
				<swt.artifactId>org.eclipse.swt.cocoa.macosx.x86_64</swt.artifactId>
			</properties>
		</profile>
		<profile>
			<id>win32</id>
			<activation>
				<os>
					<family>windows</family>
					<arch>x86</arch>
				</os>
			</activation>
			<properties>
				<swt.artifactId>org.eclipse.swt.win32.win32.x86</swt.artifactId>
			</properties>
		</profile>
		<profile>
			<id>win64</id>
			<activation>
				<os>
					<family>windows</family>
					<arch>amd64</arch>
				</os>
			</activation>
			<properties>
				<swt.artifactId>org.eclipse.swt.win32.win32.x86_64</swt.artifactId>
			</properties>
		</profile>
	</profiles>

	<repositories>
		<!-- There's no official public maven eclipse repository yet. But a lot -->
		<!-- of people miss it. Jan-Hendrik Peters has created swt-release-fetcher -->
		<!-- (https://github.com/hennr/swt-release-fetcher) and republish the swt -->
		<!-- jars as maven repo on google code. -->
		<repository>
			<id>swt-repo-by-hennr</id>
			<url>http://swt-repo.googlecode.com/svn/repo/</url>
		</repository>
	</repositories>
</project>